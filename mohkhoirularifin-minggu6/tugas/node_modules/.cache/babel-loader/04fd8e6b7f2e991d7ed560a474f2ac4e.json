{"ast":null,"code":"var _jsxFileName = \"G:\\\\Kuliah\\\\Semester6\\\\PemrogramanBerbasisFramework\\\\mohkhoirularifin-minggu6\\\\praktikum\\\\src\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect, useParams, useRouteMatch, useHistory, useLocation } from \"react-router-dom\";\nimport './App.css';\nexport default function AuthExample() {\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(AuthButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/public\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Public Page\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/private\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Private Page\"))), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/public\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(PublicPage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(LoginPage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), React.createElement(PrivateRoute, {\n    path: \"/private\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(ProtectedPage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })))));\n}\nconst fakeAuth = {\n  isAuthenticated: false,\n\n  authenticate(cb) {\n    fakeAuth.isAuthenticated = true;\n    setTimeout(cb, 100);\n  }\n\n};\n\nfunction AuthButton() {\n  let history = useHistory();\n  return fakeAuth.isAuthenticated ? React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Welcome!\", \" \", React.createElement(\"button\", {\n    onClick: () => {\n      fakeAuth.signout(() => history.push(\"/\"));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Sign Out\")) : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"You Are Not Logged In.\");\n}\n\nfunction PrivateRoute({\n  children,\n  ...rest\n}) {\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: ({\n      location\n    }) => fakeAuth.isAuthenticated ? children : React.createElement(Redirect, {\n      to: {\n        pathname: \"/login\",\n        state: {\n          from: location\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }));\n}\n\nfunction PublicPage() {\n  return React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Public\");\n}\n\nfunction ProtectedPage() {\n  return React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Private\");\n}\n\nfunction LoginPage() {\n  let history = useHistory();\n  let location = useLocation();\n  let {\n    frrm\n  } = location.state || {\n    from: {\n      pathname: \"/\"\n    }\n  };\n\n  let login = () => {\n    fakeAuth.isAuthenticated(() => {\n      history.replace(from);\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"You Must Log In To View The Page at \", from.pathname), React.createElement(\"button\", {\n    onClick: login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Log In\"));\n}","map":{"version":3,"sources":["G:/Kuliah/Semester6/PemrogramanBerbasisFramework/mohkhoirularifin-minggu6/praktikum/src/App.js"],"names":["React","BrowserRouter","Router","Switch","Route","Link","Redirect","useParams","useRouteMatch","useHistory","useLocation","AuthExample","fakeAuth","isAuthenticated","authenticate","cb","setTimeout","AuthButton","history","signout","push","PrivateRoute","children","rest","location","pathname","state","from","PublicPage","ProtectedPage","LoginPage","frrm","login","replace"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n  useParams,\n  useRouteMatch,\n  useHistory,\n  useLocation\n} from \"react-router-dom\"\nimport './App.css';\n\nexport default function AuthExample() {\n  return (\n    <Router>\n      <div>\n        <AuthButton />\n        <ul>\n          <li>\n            <Link to = \"/public\">Public Page</Link>\n          </li>\n          <li>\n            <Link to = \"/private\">Private Page</Link>\n          </li>\n        </ul>\n\n        <Switch>\n          <Route path = \"/public\">\n            <PublicPage />\n          </Route>\n          <Route path = \"/login\">\n            <LoginPage />\n          </Route>\n          <PrivateRoute path = \"/private\">\n            <ProtectedPage />\n          </PrivateRoute>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nconst fakeAuth = {\n  isAuthenticated: false,\n  authenticate(cb) {\n    fakeAuth.isAuthenticated = true;\n    setTimeout(cb, 100);\n  }\n};\n\nfunction AuthButton() {\n  let history = useHistory();\n\n  return fakeAuth.isAuthenticated ? (\n    <p>\n      Welcome!{\" \"}\n      <button\n        onClick = {() => {\n          fakeAuth.signout(() => history.push(\"/\"));\n        }}\n      >\n        Sign Out        \n      </button>\n    </p>\n  ) : (\n    <p>You Are Not Logged In.</p>\n  );\n}\n\nfunction PrivateRoute({ children, ...rest }) { \n  return (\n    <Route\n      {...rest}\n      render = {({ location }) => \n        fakeAuth.isAuthenticated ? (\n          children\n        ) : (\n          <Redirect\n            to = {{\n              pathname: \"/login\",\n              state: { from: location }\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nfunction PublicPage() {  \n  return <h3>Public</h3>;\n}\n\nfunction ProtectedPage() {  \n  return <h3>Private</h3>\n}\n\nfunction LoginPage() {\n  let history = useHistory();\n  let location = useLocation();\n\n  let { frrm } = location.state || { from: { pathname: \"/\" } };\n  let login = () => {\n    fakeAuth.isAuthenticated(() => {\n      history.replace(from);\n    });\n  };\n\n  return (\n    <div>\n      <p>You Must Log In To View The Page at { from.pathname }</p>\n      <button onClick = {login}>Log In</button>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}